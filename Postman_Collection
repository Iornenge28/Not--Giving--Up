{
	"info": {
		"_postman_id": "e262da8d-8f74-4190-8d84-20d1dee7aabd",
		"name": "Webhook generator",
		"description": "A simple collection to generate webhooksURL for a monitor of your collection\n\n---\n\n**NOTE**\n\nTo run this collection you will need the following environment variables\n\n\n\n---\n\n\n| key          | type   | description                                                                                                                    |\n|--------------|--------|--------------------------------------------------------------------------------------------------------------------------------|\n| command      | string | `command` is a string that contains the command that initiated the request from slack. Eg: `/cnb_init`                         |\n| text         | string | `text` contains the message that was send along side the command. Eg: in `/cnb_guess team` \"team\" would be the value of `text` |\n| response_url | string | `response_url` is the slack webhook where we send the response to each command.                                                |\n| user_name    | string | `user_name` is the slack username of the user. We are using it to identify players                                             |",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25913653"
	},
	"item": [
		{
			"name": "https://petstore.swagger.io/v2/swagger.json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code name should have OK string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"verify that the name is \"MyTutorCollection\",   function () {",
							"     pm.expect(jsonData.collection.item).to.eql(\"4\");",
							"});",
							"pm.test(\"verify that the name is MyTutorCollection\", function () {",
							"    pm.expect(pm.jsonData.collection).to.include(\"MyTutorCollection\");",
							"});",
							"",
							"    var jsonData = pm.response.json();",
							"   console.log(jsonData)",
							"   console.log(jsonData.collection)",
							"   console.log(jsonData.collection.info)",
							"   console.log(jsonData.collection.info.name)",
							"   ",
							"",
							"",
							"",
							"",
							" ",
							" /**",
							"  * ",
							"  *pm.test(\"verify that the name is \"MyTutorCollection\", function () {",
							"    pm.expect(jsonData.collectiopn).to.eql(\"MyTutorCollection\");",
							"});",
							"  *",
							"  */",
							" ",
							"",
							"",
							"",
							" ",
							" pm.test(\"Your test name\", function () {",
							"    pm.expect(jsonData.value).to.eql(100);",
							"});",
							"",
							"",
							"",
							"",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"response_body_string\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{postman_key}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "X-Api-Key",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.postman.com/collections/3865219-4c03efcb-f082-448a-a23a-59efc623ef2f?access_key=PMAT-01GQWQGADXMDDVQ0XJXFA35MSW",
					"protocol": "https",
					"host": [
						"api",
						"postman",
						"com"
					],
					"path": [
						"collections",
						"3865219-4c03efcb-f082-448a-a23a-59efc623ef2f"
					],
					"query": [
						{
							"key": "access_key",
							"value": "PMAT-01GQWQGADXMDDVQ0XJXFA35MSW"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}